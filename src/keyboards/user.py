from aiogram.types import (ReplyKeyboardMarkup,
                           KeyboardButton,
                           InlineKeyboardMarkup,
                           InlineKeyboardButton)

from aiogram.utils.keyboard import InlineKeyboardBuilder

from src.config import Config


def get_user_menu_kb():
    menu = InlineKeyboardBuilder()
    menu.row(
        InlineKeyboardButton(text="‚ù§ –ü–æ–¥–ø–∏—Å–∫–∞",
                             callback_data="sub_user")
    )
    menu.row(
        InlineKeyboardButton(text="üí∞ –ë–∞–ª–∞–Ω—Å",
                             callback_data="user_balance_menu")
    )
    menu.row(
        InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                             callback_data="user_stats_menu")
    )
    menu.row(
        InlineKeyboardButton(text="üóëÔ∏è –ù–æ–≤—ã–π –¥–∏–∞–ª–æ–≥",
                             callback_data="clear")
    )
    menu.row(
        InlineKeyboardButton(text="‚ùì –ü–æ–º–æ—â—å",
                             callback_data="user_help"),
        InlineKeyboardButton(text="üìÑ –û—Ñ–µ—Ä—Ç–∞",
                             callback_data="doc_ofert"),
        width=2
    )

    return menu


def get_user_sub_menu(rates, page=0, page_size=Config.n_rate_per_page, from_menu=False):
    markup = InlineKeyboardBuilder()
    start = page * page_size
    end = start + page_size

    for rate in rates[start:end]:
        markup.row(InlineKeyboardButton(text=rate["_id"],
                                        callback_data=f"buy_rate_{rate['_id']}"))

    if len(rates) > page_size:
        if page == 0:
            markup.row(
                InlineKeyboardButton(text="‚û°Ô∏è",
                                     callback_data=f"next_rate_{page}")
            )
        elif ((page + 1) * page_size) >= len(rates):
            markup.row(
                InlineKeyboardButton(text="‚¨ÖÔ∏è",
                                     callback_data=f"prev_rate_{page}")
            )
        else:
            markup.row(
                InlineKeyboardButton(text="‚¨ÖÔ∏è",
                                     callback_data=f"prev_rate_{page}"),
                InlineKeyboardButton(text="‚û°Ô∏è",
                                     callback_data=f"next_rate_{page}"),
                width=2)
    if from_menu:
        markup.row(InlineKeyboardButton(text='‚¨ÖÔ∏è–ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é',
                                        callback_data='user_menu'))
    return markup


def get_adds_kb():
    kb = InlineKeyboardMarkup(inline_keyboard=[[
        InlineKeyboardButton(text="üõí –ö—É–ø–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É",
                             callback_data="sub_user")
    ]])

    return kb


def get_document_kb():
    kb = InlineKeyboardMarkup(inline_keyboard=[[
        InlineKeyboardButton(text="üìÑ –û—Ñ–µ—Ä—Ç–∞",
                             callback_data="doc_ofert")
    ]])

    return kb


def get_back_kb():
    kb = InlineKeyboardMarkup(inline_keyboard=[[
        InlineKeyboardButton(text="‚¨ÖÔ∏è–í –º–µ–Ω—é",
                             callback_data="user_menu")
    ]])

    return kb


def get_user_stats_kb():
    kb = InlineKeyboardBuilder()
    kb.row(
        InlineKeyboardButton(text="üí∞ –ë–∞–ª–∞–Ω—Å",
                             callback_data="user_balance_menu")
    )
    kb.row(
        InlineKeyboardButton(text="‚¨ÖÔ∏è–í –º–µ–Ω—é",
                             callback_data="user_menu")
    )
    return kb


def get_user_balance_kb(user_rate):
    kb = InlineKeyboardBuilder()
    kb.row(
        InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞",
                             callback_data="user_stats_menu")
    )
    kb.row(
        InlineKeyboardButton(text="‚Ñπ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–∞—Ä–∏—Ñ–µ",
                             callback_data=f"buy_rate_{user_rate}")
    )
    kb.row(
        InlineKeyboardButton(text="‚¨ÖÔ∏è–í –º–µ–Ω—é",
                             callback_data="user_menu")
    )
    return kb


def get_user_rate_kb(rate_name, has_premium: bool = False):
    kb = InlineKeyboardBuilder()
    if has_premium:
        kb.row(
            InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å",
                                 callback_data="cancel_rate"),
        )
    else:
        kb.row(
            InlineKeyboardButton(text="üõí –ö—É–ø–∏—Ç—å",
                                 callback_data=f"buying_rate_{rate_name}")
        )
    kb.row(
        InlineKeyboardButton(text="‚¨ÖÔ∏è–ù–∞–∑–∞–¥",
                             callback_data="sub_user")
    )
    return kb
